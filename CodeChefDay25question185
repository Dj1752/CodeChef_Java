Read problem statements in Hindi, Bengali, Mandarin Chinese, Russian, and Vietnamese as well.
You are given an integer NN. Find the largest integer between 11 and 1010 (inclusive) which divides NN.

Input
The first and only line of the input contains a single integer NN.

Output
Print a single line containing one integer ― the largest divisor of NN between 11 and 1010.

Constraints
2 \leq N \leq 1,0002≤N≤1,000
Subtasks
Subtask #1 (100 points): original constraints

Sample 1:
Input
Output
91
7
Explanation:
The divisors of 9191 are 1, 7, 13, 911,7,13,91, out of which only 11 and 77 are in the range [1, 10][1,10]. Therefore, the answer is \max(1, 7) = 7max(1,7)=7.

Sample 2:
Input
Output
24
8
Explanation:
The divisors of 2424 are 1, 2, 3, 4, 6, 8, 12, 241,2,3,4,6,8,12,24, out of which 1, 2, 3, 4, 6, 81,2,3,4,6,8 are in the range [1, 10][1,10]. Therefore, the answer is \max(1, 2, 3, 4, 6, 8) = 8max(1,2,3,4,6,8)=8.

Solution

/* package codechef; // don't place package name! */

import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
		// your code goes here
	Scanner sc = new Scanner(System.in);
int t =sc.nextInt();
	int c=0;
	   for(int i=1; i<=10;i++){
	       if(t%i==0){
	           c=i;
	           
	       }
	      
	   }
	    System.out.println(c);
	}
}
