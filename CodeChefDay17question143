Problem
Alice has recently learned in her economics class that the market is said to be in equilibrium when the supply is equal to the demand.

Alice has market data for NN time points in the form of two integer arrays SS and DD. Here, S_iS 
i
​
  denotes the supply at the i^{th}i 
th
  point of time and D_iD 
i
​
  denotes the demand at the i^{th}i 
th
  point of time, for each 1 \leq i \leq N1≤i≤N.

Help Alice in finding out the number of time points at which the market was in equilibrium.

Input Format
The first line of input will contain an integer TT — the number of test cases. The description of TT test cases follows.
Each test case contains three lines of input.
The first line of each test case contains an integer NN, the length of the arrays SS and DD.
The second line of each test case contains NN space-separated integers S_1, S_2, \ldots , S_NS 
1
​
 ,S 
2
​
 ,…,S 
N
​
 .
The third line of each test case contains NN space-separated integers D_1, D_2, \ldots , D_ND 
1
​
 ,D 
2
​
 ,…,D 
N
​
 .
Output Format
For each test case, output the number of time points at which the market was in equilibrium.

Constraints
1 \leq T \leq 101≤T≤10
1 \leq N \leq 1001≤N≤100
1 \leq S_i, D_i \leq 1001≤S 
i
​
 ,D 
i
​
 ≤100 for every 1 \leq i \leq N1≤i≤N
Sample 1:
Input
Output
2
4
1 2 3 4
2 1 3 4
4
1 1 2 2
1 2 1 1
2
1
Explanation:
Test case 11: For i = 3i=3 and i = 4i=4, we have supply equal to demand, hence the market is in equilibrium.

Test case 22: For i = 1i=1, we have supply equal to demand, hence the market is in equilibrium.

Solution
/* package codechef; // don't place package name! */

import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
		// your code goes here
		Scanner sc = new Scanner(System.in);
          int t =sc.nextInt();
		
		for(int i =0;i<t;i++){
		    int n = sc.nextInt();
		    int count = 0;
		     int [] a = new int[n];
		    int [] b = new int[n];
		    for(int j = 0;j<n;j++){
		         a[j] =sc.nextInt(); 
		    }
		    for (int k=0;k<n;k++){
		         b[k] =sc.nextInt();
		    }
		    for(int l = 0; l<n;l++){
		        if(a[l]==b[l]){
		            count++;
		        }
		        
		    }
		    System.out.println(count);
		}
	}
}
