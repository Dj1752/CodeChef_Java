Problem
There are NN different types of colours numbered from 11 to NN. Chef has A_iA 
i
​
  balls having colour ii, (1\le i \le N)(1≤i≤N).

Chef will arrange some boxes and put each ball in exactly one of those boxes.
Find the minimum number of boxes Chef needs so that no box contains two balls of same colour.

Input Format
The first line of input will contain a single integer TT, denoting the number of test cases. The description of the test cases follows.
The first line of each test case contains a single integer NN, denoting the number of colors.
The second line of each test case contains NN space-separated integers A_1, A_2, \ldots, A_NA 
1
​
 ,A 
2
​
 ,…,A 
N
​
  — denoting the number of balls having colour ii.
Output Format
For each test case, output the minimum number of boxes required so that no box contains two balls of same colour.

Constraints
1 \leq T \leq 10001≤T≤1000
2 \leq N \leq 1002≤N≤100
1 \leq A_i \leq 10^51≤A 
i
​
 ≤10 
5
 
Sample 1:
Input
Output
3
2
8 5
3
5 10 15
4
4 4 4 4
8
15
4
Explanation:
Test case 11: Chef needs at least 88 boxes such that no box has two balls of same colour. A possible configuration of the 88 boxes would be \{[1, 2], [1, 2], [1, 2], [1, 2], [1, 2], [1], [1], [1]\}{[1,2],[1,2],[1,2],[1,2],[1,2],[1],[1],[1]} where the i^{th}i 
th
  element of this set denotes the colour of balls in the i^{th}i 
th
  box.

Test case 22: Chef needs at least 1515 boxes such that no box has two balls of same colour.

Test case 33: Chef needs at least 44 boxes such that no box has two balls of same colour. A possible configuration of the 44 boxes would be \{[1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4]\}{[1,2,3,4],[1,2,3,4],[1,2,3,4],[1,2,3,4]} where the i^{th}i 
th
  element of this set denotes the colour of balls in the i^{th}i 
th
  box.
  
  solution
  /* package codechef; // don't place package name! */

import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
	Scanner sc=new Scanner(System.in);
		int t=sc.nextInt();
		while(t-->0){
		    int n=sc.nextInt();
		    int [] a=new int [n];
		    for(int i=0;i<n;i++){
		        a[i]=sc.nextInt();
		        
		        
		    }
		    Arrays.sort(a);
		    System.out.println(a[n-1]);
		}
	}
}
