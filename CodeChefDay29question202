Problem
A football league of NN teams is taking place, where each team plays other teams once in single round robin fashion. A team gets 33 points for winning a game and 00 for losing (assume that no games end in a draw/tie). What is the maximum possible difference of points between the winning team and the second-placed team?

Input Format
The first line of input will contain a single integer TT, denoting the number of test cases. Then the test cases follow.
Each test case consists of a single line of input, containing a single integer NN.
Output Format
For each test case, output in a single line the maximum difference of points between first and second place.

Constraints
1 \leq T \leq 10^51≤T≤10 
5
 
2 \leq N \leq 10^92≤N≤10 
9
 
Sample 1:
Input
Output
4
2
3
4
9
3
3
6
12
Explanation:
Test case 11: There will only be one match played between the two teams, therefore one team wins by 33 points.

Test case 22: Let the three teams be A, B, C. If team A wins both the games against team B and team C, then team A will win by 33 points since one of team B and team C will win the game between them.

Test case 33: Let the four teams be A, B, C, D. One possibility is for A to win all its games, and then B beats C, C beats D, D beats B. This way, the winner has 99 points and second place has 33 points, making a difference of 66.

Test case 44: It can be shown that it's not possible to achieve a difference higher than 1212 when 99 teams play. One way of achieving this is for the winner to score 2424 points and second place to score 1212.


Solution
/* package codechef; // don't place package name! */

import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
		// your code goes here
		Scanner sc = new Scanner(System.in);
int t =sc.nextInt();
		
		while(t-->0){
		    int n =sc.nextInt();
		    float x = n/2;
		    System.out.println((int)x*3);
	    	}
	}
}
