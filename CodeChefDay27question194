Problem
Faizal is very sad after finding out that he is responsible for Sardar's death. He tries to drown his sorrows in alcohol and gets very drunk. Now he wants to return home but is unable to walk straight. For every 33 steps forward, he ends up walking one step backward.

Formally, in the 1^{st}1 
st
  second he moves 33 steps forward, in the 2^{nd}2 
nd
  second he moves 11 step backwards, in the 3^{rd}3 
rd
  second he moves 33 steps forward, in 4^{th}4 
th
  second 11 step backwards, and so on.

How far from his initial position will Faizal be after kk seconds have passed? Assume that Faizal's initial position is 00.

Input Format
The first line of input contains a single integer TT denoting the number of test cases. The description of TT test cases follows.
The first line of each test case contains a single integer kk, the number of seconds after which Faizal's position is to be calculated.
Output Format
For each test case, output a single line containing one integer - Faizal's position after kk seconds.
Constraints
1 \leq T \leq 1000001≤T≤100000
0 \leq k \leq 1000000≤k≤100000
The sum of kk over all test cases does not exceed 10000001000000
Sample 1:
Input
Output
3
5
11
23
7
13
25
Explanation:
1st Test Case

Faizal walks 33 steps forward in the 1^{st}1 
st
  second, ending up at 33
Faizal walks 11 step backward in the 2^{nd}2 
nd
  second, ending up at 22
Faizal walks 33 steps forward in the 3^{rd}3 
rd
  second, ending up at 55
Faizal walks 11 step backward in the 4^{th}4 
th
  second, ending up at 44
Faizal walks 33 steps forward in the 5^{th}5 
th
  second, ending up at 77
  
  Solution
  
  /* package codechef; // don't place package name! */

import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
		// your code goes here
		
		Scanner sc = new Scanner(System.in);
int t =sc.nextInt();
		
		while(t-->0){
		    int x =sc.nextInt();
		    int n=0;
		for(int i=1;i<=x;i++){
		    if(i%2!=0){
		    n=n+3;
		        
		    }
		    else{
		        n=n-1;
		    }
		    
		}
		System.out.println(n);
		   
		}
	}
}
