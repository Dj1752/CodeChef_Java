Problem
Chef is moving to a new house!

Unfortunately, this means he now has to pack up his things so that they can be moved too. Currently, Chef is packing up his (rather impressive) book collection into cardboard boxes.

Chef has XX shelves of books, each of which contains exactly YY books. Each cardboard box can hold at most ZZ books. In order to not mess up the organization of the books, Chef will also ensure that books from different shelves will not be placed in the same box.

Under these conditions, what is the minimum number of boxes needed to pack all the books?

Input Format
The first line of input will contain a single integer TT, denoting the number of test cases.
Each test case consists of one line of input, containing three space-separated integers X, YX,Y, and ZZ: the values described in the statement.
Output Format
For each test case, output on a new line one integer: the minimum number of boxes needed to pack all the books.

Constraints
1 \leq T \leq 10001≤T≤1000
1 \leq X, Y, Z \leq 10001≤X,Y,Z≤1000
Sample 1:
Input
Output
4
5 9 9
5 9 7
2 3 2
22 34 12
5
10
4
66
Explanation:
Test case 11: Each box can hold 99 books, and each shelf has 99 books. So, Chef needs only five boxes: one for each shelf.

Test case 22: Each box can hold 77 books, and each shelf has 99 books. So, Chef needs two boxes to hold all the books of one shelf (for example, one holding 44 books and another one holding 55). There are five shelves, so the total number of boxes needed is 5\times 2 = 105×2=10.

Test case 33: Each box can hold 22 books, and each shelf has 33 books. So, Chef needs two boxes to hold all the books of one shelf (for example, one holding 22 books and another one holding 11). There are two shelves, so the total number of boxes needed is 2\times 2 = 42×2=4.

Test case 44: Each shelf needs 33 boxes to pack all its books. There are 2222 shelves, so the answer is 22\times 3 = 6622×3=66.

Solution

/* package codechef; // don't place package name! */

import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
		// your code goes here
		Scanner sc = new Scanner(System.in);
        int t =sc.nextInt();
		
		while(t-->0){
		    double x =sc.nextInt();
			double y =sc.nextInt();
			double z=sc.nextInt();
			int res =(int)Math.ceil(y/z);
		      System.out.println((int)x*res);
		  
}
	}
}
