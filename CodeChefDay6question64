Problem
Chef has invented 11-minute Instant Noodles. As the name suggests, each packet takes exactly 11 minute to cook.

Chef's restaurant has XX stoves and only 11 packet can be cooked in a single pan.

How many customers can Chef serve in YY minutes if each customer orders exactly 11 packet of noodles?

Input Format
The first and only line of input contains two space-separated integers XX and YY — the number of stoves and the number of minutes, respectively.
Output Format
Print a single integer, the maximum number of customers Chef can serve in YY minutes
Constraints
1 \leq X, Y \leq 10001≤X,Y≤1000
Sample 1:
Input
Output
3 7
21
Explanation:
Chef cooks for Y = 7Y=7 minutes and can cook X = 3X=3 packets per minute, one on each stove.

So, the total number of packets that can be cooked is X \cdot Y = 3 \cdot 7 = 21X⋅Y=3⋅7=21.

Each person orders one packet, so the maximum number of customers that can be served is 2121.

Sample 2:
Input
Output
7 8
56
Explanation:
Chef cooks for Y = 8Y=8 minutes and can cook X = 7X=7 packets per minute, one on each stove.

So, the total number of packets that can be cooked is X \cdot Y = 7 \cdot 8 = 56X⋅Y=7⋅8=56.

Solution

/* package codechef; // don't place package name! */

import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
		// your code goes here
		    Scanner sc = new Scanner(System.in);
		    int a=sc.nextInt();
		    int b=sc.nextInt();
		   
		
		    System.out.println(a*b);
		
	}
}


Each person orders one packet, so the maximum number of customers that can be served is 5656.
