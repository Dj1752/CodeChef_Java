Problem
Chef is planning to buy a new car for his birthday. After a long search, he is left with 22 choices:

Car 1: Runs on diesel with a fuel economy of x_1x 
1
​
  km/l
Car 2: Runs on petrol with a fuel economy of x_2x 
2
​
  km/l
Chef also knows that

the current price of diesel is y_1y 
1
​
  rupees per litre
the current price of petrol is y_2y 
2
​
  rupees per litre
Assuming that both cars cost the same and that the price of fuel remains constant, which car will minimize Chef's expenses?

Print your answer as a single integer in the following format

If it is better to choose Car 1, print -1−1
If both the cars will result in the same expenses, print 00
If it is better to choose Car 2, print 11
Input Format
The first line of input contains a single integer TT, denoting the number of test cases. The description of TT test cases follows.
Each test case consists of a single line containing 44 space-separated integers — x_1, x_2, y_1, y_2x 
1
​
 ,x 
2
​
 ,y 
1
​
 ,y 
2
​
 .
Output Format
For each test case, output in a single line the answer as explained earlier.

Constraints
1 \leq T \leq 100001≤T≤10000
1 \leq x_1,x_2,y_1,y_2 \leq 501≤x 
1
​
 ,x 
2
​
 ,y 
1
​
 ,y 
2
​
 ≤50
Sample 1:
Input
Output
3
10 5 3 20
7 2 7 2
1 5 3 2
-1
0
1
Explanation:
Test Case 11: The cost of driving Car 1 is \frac{3}{10} = 0.3 
10
3
​
 =0.3 rs/km, and the cost of driving Car 2 is \frac{20}{5} = 4 
5
20
​
 =4 rs/km. Therefore, Car 1 is cheaper to drive, so the output is -1−1.

Test Case 22: The cost of driving Car 1 is 11 rs/km, and the cost of driving Car 2 is also 11 rs/km. Both cars offer the same economy, so the output is 00.

Test Case 33: The cost of driving Car 1 is 33 rs/km and the cost of driving Car 2 is 0.40.4 rs/km. Therefore, Car 2 is cheaper to drive, so the output is 11.

Solution
/* package codechef; // don't place package name! */

import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
		// your code goes here
		Scanner sc = new Scanner(System.in);
        int t =sc.nextInt();
		
		while(t-->0){
		    float x =sc.nextFloat();
			float y =sc.nextFloat();
			float x1 =sc.nextFloat();
			float y1 =sc.nextFloat();
			
		    float car1=x1/x;
		    float car2=y1/y;
		    
		    if(car1<car2)
		    System.out.println("-1");
		    else if(car1>car2)
		    System.out.println("1");
		    else if(car1==car2)
		    System.out.println("0");
		   
		 
		}   
	}
}
