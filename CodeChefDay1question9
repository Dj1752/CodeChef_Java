Problem
Chef's coding class is very famous in Chefland.

This year XX students joined his class and each student will require one chair to sit on. Chef already has YY chairs in his class. Determine the minimum number of new chairs Chef must buy so that every student is able to get one chair to sit on.

Input Format
The first line contains a single integer TT — the number of test cases. Then the test cases follow.
The first and only line of each test case contains two integers XX and YY — the number of students in the class and the number of chairs Chef already has.
Output Format
For each test case, output the minimum number of extra chairs Chef must buy so that every student gets one chair.

Constraints
1 \leq T \leq 10001≤T≤1000
0 \leq X, Y \leq 1000≤X,Y≤100
Sample 1:
Input

4
20 14
41 41
35 0
50 100

Output

6
0
35
0
Explanation:
Test case 1: There are 2020 students in the class and Chef has 1414 chairs already. Therefore Chef must buy 66 more chairs.
Test case 2: There are 4141 students in the class and Chef already has exactly 4141 chairs. Therefore Chef does not need to buy any more chairs.
Test case 3: There are 3535 students in the class and Chef has no chairs initially. Therefore Chef must buy 3535 chairs.

Solution

/* package codechef; // don't place package name! */

import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
		// your code goes here
        Scanner sc=new Scanner(System.in);
		int t=sc.nextInt();
		for (int i=0;i<t ;i++ ){
		int x=sc.nextInt();
		int y=sc.nextInt();
		    
		    if(x>y||x==y){
		        System.out.println(x-y);
		    }else if(x<y){
		        System.out.println("0");
		    }else{
		        System.out.println("invalid number");
		    }
		} 
	}
}
